import "../quinaryMerkleProof" as merkleProof;
def validPathWorks() -> bool {
    field root = 10570153201251952967890910615735579437189554717670426425255447076592125174270;
    field leaf = 69;
    field[14][5] path = [[6,9,69,0,0],[466203104223506019799758266290200207851863469812937501347321798743443990644,14655542659562014735865511769057053982292279840403315552050801315682099828156,14655542659562014735865511769057053982292279840403315552050801315682099828156,14655542659562014735865511769057053982292279840403315552050801315682099828156,14655542659562014735865511769057053982292279840403315552050801315682099828156],[15651221731272679787427950769122467986093436400711667410182557169082162745433,19261153649140605024552417994922546473530072875902678653210025980873274131905,19261153649140605024552417994922546473530072875902678653210025980873274131905,19261153649140605024552417994922546473530072875902678653210025980873274131905,19261153649140605024552417994922546473530072875902678653210025980873274131905],[13028041779026979434337361688236363476638471266174122082948156134559133993932,21526503558325068664033192388586640128492121680588893182274749683522508994597,21526503558325068664033192388586640128492121680588893182274749683522508994597,21526503558325068664033192388586640128492121680588893182274749683522508994597,21526503558325068664033192388586640128492121680588893182274749683522508994597],[12725115627354671106988193489145513332330895142437123165155387921297340647023,20017764101928005973906869479218555869286328459998999367935018992260318153770,20017764101928005973906869479218555869286328459998999367935018992260318153770,20017764101928005973906869479218555869286328459998999367935018992260318153770,20017764101928005973906869479218555869286328459998999367935018992260318153770],[2550197190695607091245657107928470909248931375142615338094431307991739913849,16998355316577652097112514691750893516081130026395813155204269482715045879598,16998355316577652097112514691750893516081130026395813155204269482715045879598,16998355316577652097112514691750893516081130026395813155204269482715045879598,16998355316577652097112514691750893516081130026395813155204269482715045879598],[260292685967562693321227890662297411001161744835029699521938980761746353343,2612442706402737973181840577010736087708621987282725873936541279764292204086,2612442706402737973181840577010736087708621987282725873936541279764292204086,2612442706402737973181840577010736087708621987282725873936541279764292204086,2612442706402737973181840577010736087708621987282725873936541279764292204086],[13364288105879973495598717236121970539878291724231298739647413097936473316833,17716535433480122581515618850811568065658392066947958324371350481921422579201,17716535433480122581515618850811568065658392066947958324371350481921422579201,17716535433480122581515618850811568065658392066947958324371350481921422579201,17716535433480122581515618850811568065658392066947958324371350481921422579201],[10781037434902023159976590810796042347374678614906020793466573078544485613789,17437916409890180001398333108882255895598851862997171508841759030332444017770,17437916409890180001398333108882255895598851862997171508841759030332444017770,17437916409890180001398333108882255895598851862997171508841759030332444017770,17437916409890180001398333108882255895598851862997171508841759030332444017770],[11494536245414728545788859881153521486395296862836354143332068509961377774750,20806704410832383274034364623685369279680495689837539882650535326035351322472,20806704410832383274034364623685369279680495689837539882650535326035351322472,20806704410832383274034364623685369279680495689837539882650535326035351322472,20806704410832383274034364623685369279680495689837539882650535326035351322472],[13156676896165960745462275950465415777715676497855642142957257278808632503589,6821382292698461711184253213986441870942786410912797736722948342942530789476,6821382292698461711184253213986441870942786410912797736722948342942530789476,6821382292698461711184253213986441870942786410912797736722948342942530789476,6821382292698461711184253213986441870942786410912797736722948342942530789476],[15332478553790308098966413898195418525548707851605082484874151741047122066683,5916648769022832355861175588931687601652727028178402815013820610204855544893,5916648769022832355861175588931687601652727028178402815013820610204855544893,5916648769022832355861175588931687601652727028178402815013820610204855544893,5916648769022832355861175588931687601652727028178402815013820610204855544893],[7686534611352216784006816859685101717641265587545893095560646623415688983204,8979092375429814404031883906996857902016801693563521316025319397481362525766,8979092375429814404031883906996857902016801693563521316025319397481362525766,8979092375429814404031883906996857902016801693563521316025319397481362525766,8979092375429814404031883906996857902016801693563521316025319397481362525766],[1587385233421569431515100143935938492728521142918581209868404119108844836665,2921214989930864339537708350754648834701757280474461132621735242274490553963,2921214989930864339537708350754648834701757280474461132621735242274490553963,2921214989930864339537708350754648834701757280474461132621735242274490553963,2921214989930864339537708350754648834701757280474461132621735242274490553963]];
    u32[14] indices = [2,0,0,0,0,0,0,0,0,0,0,0,0,0];
    bool result = merkleProof(root, leaf, path, indices);
    assert(result == true);
    return true;
}

def main() -> bool {
    bool a1 = validPathWorks();
    return true;
}
