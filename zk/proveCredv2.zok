// import "hashes/pedersen/512bit" as hash;
import "hashes/poseidon/poseidon" as hash;
// import "hashes/blake2/blake2s" as leafHash;
import "hashes/utils/256bitsDirectionHelper" as multiplex;

const u32 DEPTH = 32;

// Forked from https://github.com/Zokrates/ZoKrates/blob/deploy/zokrates_cli/examples/merkleTree/pedersenPathProof3.zok
def main(field root, private field leaf, private bool[DEPTH] directionSelector, private field[DEPTH] path) -> bool {
    // Start from the leaf
    field mut digest = leaf;

    // Loop up the tree
    for u32 i in 0..DEPTH {
        field[2] preimage = directionSelector[i] ? [path[i], digest] : [digest, path[i]];
        digest = hash(preimage);
    }

    return digest == root;
}

// def main() -> field {
//     // u32[16] leaf = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
//     field[2] leaf = [0, 0];
//     return hash(leaf);
// }
